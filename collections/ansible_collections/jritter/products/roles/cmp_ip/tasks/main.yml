---
# tasks file for cmp_ip

- name: Define IP address
  ansible.builtin.set_fact:
    cmp_ip: "{{ 255 | random }}.{{ 255 | random }}.{{ 255 | random }}.{{ 255 | random }}"

- name: Make sure that inventory exists
  ansible.controller.inventory:
    name: Configuration Items
    description: Inventory that hosts all the Configuration Items
    organization: Default

- name: Add IP to Inventory
  ansible.controller.host:
    name: "{{ cmp_ip }}"
    inventory: Configuration Items
    state: present
    variables:
      parent: "{{ parent_ci | default('n/a') }}"
      parent_ci_type: "{{ parent_ci_type | default('n/a') }}"
      cmp_vars: "{{ cmp_vars | default() }}"
      state: deployed
  register: inventory_entry

- name: Make sure group exists
  ansible.controller.group:
    name: "{{ ci_type }}"
    inventory: Configuration Items
    state: present

- name: Add IP to respective inventory groups
  ansible.controller.group:
    name: "{{ ci_type }}"
    inventory: Configuration Items
    hosts:
      - "{{ cmp_ip }}"
    state: present
    preserve_existing_hosts: True

- block:
  - name: Output IP
    ansible.builtin.debug:
      var: cmp_ip

  - name: Return the created CI
    ansible.builtin.set_stats:
      data:
        ci_name: "{{ cmp_ip }}"
        ci_id: "{{ inventory_entry.id }}"
  rescue:
  - name: Update Inventory
    ansible.controller.host:
      name: "{{ cmp_ip }}"
      inventory: Configuration Items
      state: present
      variables:
        parent: "{{ parent_ci | default('n/a') }}"
        parent_ci_type: "{{ parent_ci_type | default('n/a') }}"
        cmp_vars: "{{ cmp_vars | default() }}"
        state: failed
        ansible_failed_task: "{{ ansible_failed_task }}"
        ansible_failed_result: "{{ ansible_failed_result }}"
  - name: Failing after rescue
    ansible.builtin.fail:
      msg: "{{ ansible_failed_result }}"